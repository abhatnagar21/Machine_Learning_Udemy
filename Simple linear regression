import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
dataset=pd.read_excel('Salary_Data.xlsx')
x=dataset.iloc[:,:-1].values
y=dataset.iloc[:,-1].values
x_train, x_test, y_train, y_test=train_test_split(x,y,test_size=0.2,random_state=0)
#predicting variables
regressor=LinearRegression()
regressor.fit(x_train,y_train)
y_pred=regressor.predict(x_test)#y_test contains the real salary y_train contains the predicted salary
#displaying the training set results
# plt.scatter(x_train,y_train,color='red')#red dots are real salary
# plt.plot(x_train,regressor.predict(x_train),color="blue")
# plt.title('salary vs exp(traing set)')
# plt.xlabel("yrs of exp")
# plt.ylabel("salary")
# plt.show()
#display test set result
plt.scatter(x_test,y_test,color='red')#red dots are real salary
plt.plot(x_train,regressor.predict(x_train),color="blue")
plt.title('salary vs exp(test set)')
plt.xlabel("yrs of exp")
plt.ylabel("salary")
plt.show()
#predicting salary of employee of 12 yr exp data not available
#print(regressor.predict([[12]]))
#getting coeff of lr line y=b0x+b1
print(regressor.coef_)
print(regressor.intercept_)
